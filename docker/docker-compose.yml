version: "3.7"

services:
  smart-repo-rabbitmq:
    container_name: smart-repo-rabbitmq
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      rabbit-network:
        aliases:
          - ${RABBITMQ_HOST}

  elasticsearch:
    container_name: smart-repo-elastic
    image: elasticsearch:7.6.0
    ports:
      - 9200:9200
    environment:
      discovery.type: single-node
      xpack.license.self_generated.type: trial
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1" ]
      interval: 30s
      timeout: 30s
      retries: 3
    logging:
      driver: none
    networks:
      elk:

  kibana:
    container_name: smart-repo-kibana
    image: kibana:7.6.0
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - 5601:5601
    environment:
      SERVER_NAME: kibana
    logging:
      driver: none
    networks:
      elk:

  smart-repo-backend:
    container_name: smart-repo-backend
    build:
      context: ../backend
      args:
        - RABBITMQ_HOST=${RABBITMQ_HOST}
        - ELASTICSEARCH_ADDRESS=${ELASTICSEARCH_ADDRESS}
    image: smart-repo-backend:latest
    ports:
      - 7777:7777
      - 5005:5005
    environment:
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    networks:
      rabbit-network:
      elk:
    volumes:
      - ../storage:/storage
    depends_on:
      elasticsearch:
        condition: service_healthy
      smart-repo-rabbitmq:
        condition: service_healthy

  smart-repo-gui:
    container_name: smart-repo-gui
    build:
      context: ../frontend/smart-repo-gui
    image: smart-repo-gui:latest
    ports:
      - 8080:8080
    networks:
      smart-repo-network:

  smart-repo-video:
    build:
      context: ../parsers/video
      args:
        - RABBITMQ_HOST=${RABBITMQ_HOST}
    image: smart-repo-video:latest
    restart: unless-stopped
    networks:
      rabbit-network:
    volumes:
      - ../storage:/storage
    depends_on:
      smart-repo-rabbitmq:
        condition: service_healthy

  smart-repo-image:
    build:
      context: ../parsers/image
      args:
        - RABBITMQ_HOST=${RABBITMQ_HOST}
    image: smart-repo-image:latest
    restart: unless-stopped
    networks:
      rabbit-network:
    volumes:
      - ../storage:/storage
    depends_on:
      smart-repo-rabbitmq:
        condition: service_healthy
networks:
  rabbit-network:
  smart-repo-network:
  elk:
    driver: bridge
